{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nexport var setSearchField = function setSearchField(text) {\n  console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots(dispattch) {\n  dispatchEvent({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return dispatchEvent({\n      type: REQUEST_ROBOTS_SUCCESS,\n      payload: data\n    });\n  }).catch(function (error) {\n    return dispatchEvent({\n      type: REQUEST_ROBOTS_FAILED,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kyouakira/Documents/GitHub/robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","console","log","type","payload","requestRobots","dispattch","dispatchEvent","fetch","then","response","json","data","catch","error"],"mappings":"AAAA,SACEA,mBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,gBALP;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO;AACLG,IAAAA,IAAI,EAAER,mBADD;AAELS,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AAE1CC,EAAAA,aAAa,CAAC;AAAEJ,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAb;AACAY,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,WAAGA,QAAQ,CAACC,IAAT,EAAH;AAAA,GADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,WAAIL,aAAa,CAAC;AAAEJ,MAAAA,IAAI,EAAEN,sBAAR;AAAgCO,MAAAA,OAAO,EAAEQ;AAAzC,KAAD,CAAjB;AAAA,GAFZ,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,WAAIP,aAAa,CAAC;AAAEJ,MAAAA,IAAI,EAAEL,qBAAR;AAA+BM,MAAAA,OAAO,EAAEU;AAAxC,KAAD,CAAjB;AAAA,GAHd;AAID,CAPM","sourcesContent":["import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants.js'\n\nexport const setSearchField = (text) => {\n  console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  }\n}\n\nexport const requestRobots = (dispattch) => {\n\n  dispatchEvent({ type: REQUEST_ROBOTS_PENDING })\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(data => dispatchEvent({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatchEvent({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}"]},"metadata":{},"sourceType":"module"}
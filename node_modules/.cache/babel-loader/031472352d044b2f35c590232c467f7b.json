{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nexport var setSearchField = function setSearchField(text) {\n  console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots(dispattch) {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n  }\n\n  dispatchEvent({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return dispatchEvent({\n      type: REQUEST_ROBOTS_SUCCESS,\n      payload: data\n    });\n  }).catch(function (error) {\n    return dispatch({\n      type: REQUEST_ROBOTS_FAILED,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kyouakira/Documents/GitHub/robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","console","log","type","payload","requestRobots","dispattch","action","Object","assign","state","isPending","robots","error","dispatchEvent","fetch","then","response","json","data","catch","dispatch"],"mappings":"AAAA,SACEA,mBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,gBALP;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO;AACLG,IAAAA,IAAI,EAAER,mBADD;AAELS,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAe;AAC1C,UAAOC,MAAM,CAACJ,IAAd;AACE,SAAKP,sBAAL;AACE,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,KAAlB,EAAyB;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACF,SAAKd,sBAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,KAAlB,EAAyB;AAAEE,QAAAA,MAAM,EAAEL,MAAM,CAACH,OAAjB;AAA0BO,QAAAA,SAAS,EAAE;AAArC,OAAzB,CAAP;;AACF,SAAKb,qBAAL;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,KAAlB,EAAyB;AAAEG,QAAAA,KAAK,EAAEN,MAAM,CAACH,OAAhB;AAAyBO,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;AANJ;;AAQAG,EAAAA,aAAa,CAAC;AAAEX,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAb;AACAmB,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,WAAGA,QAAQ,CAACC,IAAT,EAAH;AAAA,GADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,WAAIL,aAAa,CAAC;AAAEX,MAAAA,IAAI,EAAEN,sBAAR;AAAgCO,MAAAA,OAAO,EAAEe;AAAzC,KAAD,CAAjB;AAAA,GAFZ,EAGGC,KAHH,CAGS,UAAAP,KAAK;AAAA,WAAIQ,QAAQ,CAAC;AAAElB,MAAAA,IAAI,EAAEL,qBAAR;AAA+BM,MAAAA,OAAO,EAAES;AAAxC,KAAD,CAAZ;AAAA,GAHd;AAID,CAdM","sourcesContent":["import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants.js'\n\nexport const setSearchField = (text) => {\n  console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  }\n}\n\nexport const requestRobots = (dispattch) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true});\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, { robots: action.payload, isPending: false })\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, { error: action.payload, isPending: false })\n  }\n  dispatchEvent({ type: REQUEST_ROBOTS_PENDING })\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(data => dispatchEvent({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}"]},"metadata":{},"sourceType":"module"}